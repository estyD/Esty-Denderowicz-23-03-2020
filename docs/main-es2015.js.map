{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/favorites/favorites.component.html","./src/app/favorites/favorites.component.ts","./src/app/model/Objects.ts","./src/app/weather/day-forcast/day-forcast.component.html","./src/app/weather/day-forcast/day-forcast.component.ts","./src/app/weather/weather.component.html","./src/app/weather/weather.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\nimport { map, catchError } from 'rxjs/operators';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private url = \"https://dataservice.accuweather.com/\";\n  private APIKey = \"MtoQd62TAl5buckrt5EXkWw46h76WdNq\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  //Get City key By Geo-Position from API\n  public getCitiesByGeoPosition(lat: string, long: string): Observable<any> {\n\n    let getCitiesURL = `${this.url}locations/v1/cities/geoposition/search?apikey=${this.APIKey}&q=${lat},${long}`;\n\n    return this.httpClient.get(getCitiesURL)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  //Get Cities by search text from API\n  public getCities(searchText: string): Observable<any> {\n\n    let getCitiesURL = `${this.url}locations/v1/cities/autocomplete?apikey=${this.APIKey}&q=${searchText}`;\n\n    return this.httpClient.get(getCitiesURL)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  //Get current weather from API\n  public getCurrentCondition(locationKey: string): Observable<any> {\n\n    let getCurrentConditionURL = `${this.url}currentconditions/v1/${locationKey}?apikey=${this.APIKey}`;\n\n    return this.httpClient.get(getCurrentConditionURL)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  //Get 5 day daily forecast from API\n  public get5DaysForecasts(locationKey: string, metric: boolean = true): Observable<any> {\n\n    let get5DaysForecastsURL = `${this.url}forecasts/v1/daily/5day/${locationKey}?apikey=${this.APIKey}&metric=${metric}`;\n\n    return this.httpClient.get(get5DaysForecastsURL)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  //Handle Errors - global function\n  private handleError(error: HttpErrorResponse) {\n    console.error('An error occurred:', error);\n    return throwError('Something bad happened, please try again later.');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport { WeatherComponent } from './weather/weather.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'weather', pathMatch: 'full' },\n    { path: 'favorites', component: FavoritesComponent },\n    { path: 'weather', component: WeatherComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\n  <!--Navbar brand  -->\n  <a class=\"navbar-brand\" href=\"#\">\n    <img src=\"assets/earth.png\" width=\"50\">\n  </a>\n\n  <!--Celsius/Fahrenheit toggle button For small devices -->\n  <p-selectButton class=\"selectType-md\" [options]=\"types\" [(ngModel)]=\"SelectType\" (onChange)=\"onSelectType($event)\"></p-selectButton>\n\n  <!--Navigate For small devices  -->\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <!--Navigate  -->\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/weather\" routerLinkActive=\"active\"> Home </a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/favorites\" routerLinkActive=\"active\"> Favorites </a>\n      </li>\n    </ul>\n  </div>\n\n  <!--Celsius/Fahrenheit toggle button  -->\n  <p-selectButton class=\"selectType-lg\" [options]=\"types\" [(ngModel)]=\"SelectType\" (onChange)=\"onSelectType($event)\"></p-selectButton>\n</nav>\n\n<router-outlet></router-outlet>","import { Component } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\n\nimport { TemperatureType } from './model/Objects';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  //Declare the values for select temperature-type\n\n  types: SelectItem[];\n  SelectType = true;\n\n  constructor(public TemperatureType: TemperatureType) {\n\n    this.types = [\n      { label: '°C', value: true },\n      { label: '°F', value: false }\n    ];\n  }\n\n  onSelectType(event) {\n    this.TemperatureType.Celsius = event[\"value\"];\n  }\n}\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { ToastModule } from 'primeng/toast';\nimport { SelectButtonModule } from 'primeng/selectbutton';\n\nimport { FavoriteCities, TemperatureType } from './model/Objects';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { DayForcastComponent } from './weather/day-forcast/day-forcast.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FavoritesComponent,\n    WeatherComponent,\n    DayForcastComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AppRoutingModule,\n    AutoCompleteModule,\n    ToastModule,\n    SelectButtonModule\n  ],\n  exports: [\n    DayForcastComponent\n  ],\n  providers: [FavoriteCities, TemperatureType],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"div-container p-5\">\n\n    <!--No favorites  -->\n    <div *ngIf=\"FavoriteCities.Cities.length == 0\" class=\"center-big-text\">You have no favorites yet...</div>\n\n    <!--View all favorites, each one can link to main page  -->\n    <div class=\"condition-container favorite pointer\" *ngFor=\"let favorite of FavoriteCities.Cities; let index = index\" routerLink=\"../weather\"\n        [queryParams]=\"{ city: favorite.City.LocalizedName, key: favorite.City.Key }\">\n        <div class=\"favorite-route\"><span class=\"pl-2\"><</span></div>\n        <div class=\"favorite-details\">\n            <div>{{favorite.City.LocalizedName}}</div>\n            <div *ngIf=\"TemperatureType.Celsius\">{{favorite.Condition.Temperature.Metric.Value}}°C</div>\n            <div *ngIf=\"!TemperatureType.Celsius\">{{favorite.Condition.Temperature.Imperial.Value}}°F</div>\n            <div>{{favorite.Condition.WeatherText}}</div>\n        </div>\n        <img class=\"blue-heart\" src=\"assets/heart-blue.png\" width=\"40\">\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { City, FavoriteCities, Condition, TemperatureType } from './../model/Objects';\n\n@Component({\n  selector: 'favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n\n  constructor(public FavoriteCities: FavoriteCities, public TemperatureType: TemperatureType) { }\n\n  ngOnInit(): void {\n  }\n\n}","// All models\n\nexport class City {\n\n    Key: string;\n\n    LocalizedName: string;\n\n    isFavorite: boolean = false;\n\n    constructor(key: string, localizedName: string, isFavorite?: boolean) {\n        this.Key = key;\n        this.LocalizedName = localizedName;\n        this.isFavorite = isFavorite;\n    }\n}\n\n\nexport class Condition {\n\n    WeatherText: string;\n\n    WeatherIcon?: number;\n\n    HasPrecipitation: boolean;\n\n    PrecipitationType: string;\n\n    PrecipitationIntensity: string;\n\n    Temperature: {\n\n        Metric: {\n            Value?: number;\n        },\n\n        Imperial: {\n            Value?: number;\n        }\n    }\n\n    constructor(WeatherText: string, HasPrecipitation: boolean, PrecipitationType: string, PrecipitationIntensity: string, Temperature?: number, ImpTemperature?: number, WeatherIcon?: number) {\n        this.WeatherText = WeatherText;\n        this.WeatherIcon = WeatherIcon;\n        this.HasPrecipitation = HasPrecipitation;\n        this.PrecipitationType = PrecipitationType;\n        this.PrecipitationIntensity = PrecipitationIntensity;\n        this.Temperature = { Metric: { Value: Temperature }, Imperial: { Value: ImpTemperature } };\n    }\n}\n\n\nexport class DailyForecast {\n\n    Date: Date;\n\n    Temperature: {\n\n        Minimum: {\n            Value?: number;\n        },\n\n        Maximum: {\n            Value?: number;\n        }\n    }\n\n    constructor(Date: Date, MaxTemperature?: number, MinTemperature?: number) {\n        this.Date = Date;\n        this.Temperature = { Minimum: { Value: MinTemperature }, Maximum: { Value: MaxTemperature } };\n    }\n}\n\nexport class FavoriteCities {\n\n    Cities: {City: City, Condition: Condition}[] = [];\n}\n\nexport class TemperatureType {\n\n    Celsius: boolean = true;\n}","<img class=\"img-spirala\" src=\"assets/spirala.png\" width=\"200\">\n<div class=\"day-forcast\">\n    <div>{{day | date: 'EE'}}</div>\n    <div *ngIf=\"TemperatureType.Celsius\" class=\"mt-3\">{{temperature}}°C</div>\n    <div *ngIf=\"!TemperatureType.Celsius\" class=\"mt-3\">{{temperature}}°F</div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { formatDate } from '@angular/common';\n\nimport { TemperatureType } from './../../model/Objects';\n\n@Component({\n  selector: 'app-day-forcast',\n  templateUrl: './day-forcast.component.html',\n  styleUrls: ['./day-forcast.component.scss']\n})\nexport class DayForcastComponent implements OnInit {\n\n  @Input() day : string;\n  @Input() temperature : string;\n\n  constructor(public TemperatureType: TemperatureType) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"div-container px-md-5\">\n\n    <!--Indication for errors  -->\n    <p-toast position=\"top-center\" [hideTransitionOptions]=\"'500ms'\"></p-toast>\n\n    <!--Search form  -->\n    <div class=\"search-form py-5 px-md-0\" [formGroup]=\"searchForm\">\n\n        <div>\n            <p-autoComplete formControlName=\"city\" [suggestions]=\"cities\" field=\"LocalizedName\" (completeMethod)=\"searchCity($event)\"\n                (onSelect)=\"selectCity($event)\" placeholder=\"Search city\" [style]=\"{'width':'calc(100% - 40px)', 'max-width': '500px' }\" [inputStyle]=\"{'width':'100%'}\"></p-autoComplete>\n\n            <img src=\"assets/search.png\" width=\"20\" class=\"ml-3\">\n        </div>\n\n        <div *ngIf=\"f.city.invalid\" class=\"error\">\n            <div *ngIf=\"f.city.errors.pattern\">English letters only</div>\n        </div>\n\n    </div>\n\n\n    <!--Weather details  -->\n    <div class=\"condition-container\" *ngIf=\"currentCity\">\n\n        <div class=\"city-details flex-container\">\n\n            <div class=\"d-flex\">\n                <img src=\"assets/location.png\" width=\"50\">\n                <div class=\"ml-3 my-auto\">\n                    <div>{{currentCity?.LocalizedName}}</div>\n                    <div *ngIf=\"TemperatureType.Celsius\">{{currentCondition?.Temperature?.Metric?.Value}}<span>°C</span></div>\n                    <div *ngIf=\"!TemperatureType.Celsius\">{{currentCondition?.Temperature?.Imperial?.Value}}<span>°F</span></div>\n                </div>\n            </div>\n\n            <!--'Add to favorites' button  -->\n            <div class=\"d-flex pointer\" (click)=\"setFavorite()\">\n                <div *ngIf=\"!currentCity.isFavorite\"><img src=\"assets/heart.png\" width=\"30\"> &nbsp; Add to Favorites</div>\n                <div *ngIf=\"currentCity.isFavorite\"><img src=\"assets/heart-blue.png\" width=\"30\"> &nbsp; Remove From Favorites</div>\n            </div>\n        </div>\n\n        <div class=\"center-big-text mt-4\">\n            {{currentCondition?.WeatherText}}\n            <span *ngIf=\"!currentCondition.HasPrecipitation\"> No Precipitation</span>\n            <span *ngIf=\"currentCondition.HasPrecipitation\"> {{currentCondition?.PrecipitationIntensity}} {{currentCondition?.PrecipitationType}}</span>\n        </div>\n\n        <!--5 days daily forecast - use component  -->\n        <div class=\"days-forecast\">\n            <app-day-forcast class=\"mt-5 mx-3\" *ngFor=\"let day of dailyForecasts\" [day]=\"day.Date\" [temperature]=\"day.Temperature.Maximum.Value\"></app-day-forcast>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { MessageService } from 'primeng/api';\n\nimport { ApiService } from '../api.service'\nimport { City, Condition, DailyForecast, FavoriteCities, TemperatureType } from './../model/Objects';\n\n@Component({\n  selector: 'weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss'],\n  providers: [MessageService]\n})\nexport class WeatherComponent implements OnInit {\n\n  cities: City[];\n\n  searchForm: FormGroup;\n\n  currentCity: City;\n\n  currentCondition: Condition;\n\n  dailyForecasts: DailyForecast[];\n\n  sub: any;\n\n  flagTempType: boolean;\n\n  get f() { return this.searchForm.controls; }\n\n  constructor(private fb: FormBuilder, private messageService: MessageService,\n    public apiService: ApiService, public FavoriteCities: FavoriteCities, private route: ActivatedRoute,\n    public TemperatureType: TemperatureType) {\n\n    this.flagTempType = this.TemperatureType.Celsius;\n  }\n\n  //Check if the Temperature type has changed from header\n  ngAfterViewChecked() {\n    if (this.flagTempType != this.TemperatureType.Celsius) {\n      this.flagTempType = this.TemperatureType.Celsius;\n      this.get5DaysForecasts();\n    }\n  }\n\n  ngOnInit(): void {\n\n    // Validate 'english letter only' in autoComplete search\n    this.searchForm = this.fb.group({\n      city: ['', Validators.pattern('^[a-zA-Z ]*')]\n    });\n\n    // Defaults to current location if no query param provided from Favorite page.\n    this.sub = this.route\n      .queryParams\n      .subscribe(params => {\n\n        if (params['key']) {\n          this.currentCity = new City(params['key'], params['city'], true);\n\n          this.selectCity(this.currentCity);\n        }\n\n        else if (!navigator.geolocation) {\n          this.messageService.add({ severity: 'error', summary: 'Geolocation Error', detail: 'Geolocation is not supported by your browser' });\n        }\n\n        else {\n          navigator.geolocation.getCurrentPosition(\n            (data: any) => {\n              this.searchCityByGeoPosition(data[\"coords\"][\"latitude\"], data[\"coords\"][\"longitude\"])\n            },\n            error => {\n              this.messageService.add({ severity: 'error', summary: 'Geolocation Error', detail: 'Geolocation is not supported by your browser' });\n            }\n          );\n        }\n\n      });\n  }\n\n  //Get city key by geo-position\n  searchCityByGeoPosition(lat, long) {\n\n    this.apiService.getCitiesByGeoPosition(lat, long)\n      .subscribe(\n        (data: any) => {\n\n          this.currentCity = data;\n\n          var favoriteCity = this.FavoriteCities.Cities.find(c => c.City.Key == this.currentCity.Key);\n          this.currentCity.isFavorite = favoriteCity ? true : false;\n\n          this.selectCity(this.currentCity);\n        },\n        error => {\n          this.messageService.add({ severity: 'error', summary: 'Server Error', detail: error });\n        }\n      );\n  }\n\n  //AutoComplete search\n  searchCity(event) {\n\n    if (this.searchForm.invalid) {\n      return;\n    }\n\n    this.apiService.getCities(event.query)\n      .subscribe(\n        (data: any) => {\n          this.cities = data;\n        },\n        error => {\n          this.messageService.add({ severity: 'error', summary: 'Server Error', detail: error });\n        }\n      );\n  }\n\n  //Get the current weather of the searched location or default location.\n  selectCity(event: City) {\n\n    this.f.city.setValue(event.LocalizedName);\n    \n    this.currentCity = event;\n\n    this.apiService.getCurrentCondition(this.currentCity.Key)\n      .subscribe(\n        (data: any) => {\n          this.currentCondition = data[0];\n        },\n        error => {\n          this.messageService.add({ severity: 'error', summary: 'Server Error', detail: error });\n        }\n      );\n\n    this.get5DaysForecasts();\n\n  }\n\n  // Get the 5-day forecast of the searched location or default location.\n  get5DaysForecasts() {\n\n    this.apiService.get5DaysForecasts(this.currentCity.Key, this.TemperatureType.Celsius)\n      .subscribe(\n        (data: any) => {\n          this.dailyForecasts = data[\"DailyForecasts\"];\n        },\n        error => {\n          this.messageService.add({ severity: 'error', summary: 'Server Error', detail: error });\n        }\n      );\n  }\n\n  setFavorite() {\n\n    this.currentCity.isFavorite = !this.currentCity.isFavorite;\n\n    if (this.currentCity.isFavorite) {\n      this.FavoriteCities.Cities.push({ City: this.currentCity, Condition: this.currentCondition });\n    }\n    else {\n      this.FavoriteCities.Cities = this.FavoriteCities.Cities.filter(city => city.City.Key != this.currentCity.Key);\n    }\n  }\n\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}