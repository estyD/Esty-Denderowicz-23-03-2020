{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/favorites/favorites.component.html","./src/app/favorites/favorites.component.ts","./src/app/model/Objects.ts","./src/app/weather/day-forcast/day-forcast.component.html","./src/app/weather/day-forcast/day-forcast.component.ts","./src/app/weather/weather.component.html","./src/app/weather/weather.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\nimport { map, catchError } from 'rxjs/operators';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private url = \"http://dataservice.accuweather.com/\";\n  private APIKey = \"UmYeAyaujF32MGqZvaZnRNwnngm1HuSj\";\n\n  constructor(private httpClient: HttpClient) {\n\n    //this.url = 'assets/config.json';\n  }\n\n  public getCities(searchText: string): Observable<any> { \n\n    let getCitiesURL = `${this.url}locations/v1/cities/autocomplete?apikey=${this.APIKey}&q=${searchText}`;\n\n    return this.httpClient.get(getCitiesURL)\n      .pipe( \n          catchError(this.handleError)\n      );\n  }\n\n  public getCurrentCondition(locationKey: string): Observable<any> { \n\n    let getCurrentConditionURL = `${this.url}currentconditions/v1/${locationKey}?apikey=${this.APIKey}`;\n\n    return this.httpClient.get(getCurrentConditionURL)\n      .pipe( \n          catchError(this.handleError)\n      );\n  }\n    \n  public get5DaysForecasts(locationKey: string): Observable<any> { \n\n    let get5DaysForecastsURL = `${this.url}forecasts/v1/daily/5day/${locationKey}?apikey=${this.APIKey}&metric=true`;\n\n    return this.httpClient.get(get5DaysForecastsURL)\n      .pipe( \n          catchError(this.handleError)\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error('An error occurred:', error);\n    return throwError('Something bad happened, please try again later.');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport { WeatherComponent } from './weather/weather.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'weather', pathMatch: 'full' },\n    { path: 'favorites', component: FavoritesComponent },\n    { path: 'weather', component: WeatherComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">\n    <img src=\"assets/earth.png\" width=\"50\">\n  </a>\n\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/weather\" routerLinkActive=\"active\"> Home </a> \n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/favorites\" routerLinkActive=\"active\"> Favorites </a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n <router-outlet></router-outlet> ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'weather-app';\n}\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {AutoCompleteModule} from 'primeng/autocomplete';\nimport {ToastModule} from 'primeng/toast';\n\nimport { FavoriteCities } from './model/Objects';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { DayForcastComponent } from './weather/day-forcast/day-forcast.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FavoritesComponent,\n    WeatherComponent,\n    DayForcastComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    AutoCompleteModule,\n    ToastModule\n  ],\n  exports: [\n    DayForcastComponent\n  ],\n  providers: [FavoriteCities],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div>\n\n    <div *ngFor=\"let favorite of FavoriteCities.Cities; let index = index\"  routerLink= \"../weather\" [queryParams]=\"{ city: favorite.City.LocalizedName, key: favorite.City.Key }\">\n\n        <div>{{favorite.City.LocalizedName}}</div>\n        <div>{{favorite.Condition.WeatherText}}</div>\n        <div>{{favorite.Condition.Temperature.Metric.Value}}</div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { City, FavoriteCities, Condition } from './../model/Objects';\n\n@Component({\n  selector: 'favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n\n  constructor(public FavoriteCities: FavoriteCities) { }\n\n  ngOnInit(): void {\n  }\n\n  routeTo(city: City) {\n    this.FavoriteCities.Cities[0].Condition.Temperature.Metric.Value\n  }\n\n}","export class City {\n\n    Key: string;\n\n    LocalizedName: string;\n\n    isFavorite: boolean = false;\n\n    constructor(key: string, localizedName: string) {\n        this.Key = key;\n        this.LocalizedName = localizedName;\n    }\n}\n\n\nexport class Condition {\n\n    WeatherText: string;\n\n    WeatherIcon?: number;\n\n    HasPrecipitation: boolean;\n\n    PrecipitationType: string;\n\n    PrecipitationIntensity: string;\n\n    Temperature: {\n        Metric: {\n            Value?: number;\n        }\n    }\n\n    constructor(WeatherText: string, HasPrecipitation: boolean, PrecipitationType: string, PrecipitationIntensity: string, Temperature?: number, WeatherIcon?: number) {\n        this.WeatherText = WeatherText;\n        this.WeatherIcon = WeatherIcon;\n        this.HasPrecipitation = HasPrecipitation;\n        this.PrecipitationType = PrecipitationType;\n        this.PrecipitationIntensity = PrecipitationIntensity;\n        this.Temperature = { Metric: { Value: Temperature } };\n    }\n}\n\n\nexport class DailyForecast {\n\n    Date: Date;\n\n    Temperature: {\n\n        Minimum: {\n            Value?: number;\n        },\n\n        Maximum: {\n            Value?: number;\n        }\n    }\n\n    constructor(Date: Date, MaxTemperature?: number, MinTemperature?: number) {\n        this.Date = Date;\n        this.Temperature = { Minimum: { Value: MinTemperature }, Maximum: { Value: MaxTemperature } };\n    }\n}\n\nexport class FavoriteCities {\n\n    Cities: {City: City, Condition: Condition}[] = [];\n}","<div>\n    <div>{{day | date: 'EE'}}</div>\n    <div>{{temperature}}</div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-day-forcast',\n  templateUrl: './day-forcast.component.html',\n  styleUrls: ['./day-forcast.component.scss']\n})\nexport class DayForcastComponent implements OnInit {\n\n  @Input() day : string;\n  @Input() temperature : string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n\n    <p-toast position=\"top-center\" [hideTransitionOptions]=\"'500ms'\"></p-toast>\n\n\n    <div class=\"search-form\" [formGroup]=\"searchForm\">    \n        \n        <p-autoComplete formControlName=\"city\" [suggestions]=\"cities\" field=\"LocalizedName\" (completeMethod)=\"searchCity($event)\" (onSelect)=\"selectCity($event)\"></p-autoComplete>\n        \n        <div *ngIf=\"f.city.invalid\">\n            <div *ngIf=\"f.city.errors.pattern\">English letters only</div>\n        </div>\n\n    </div>\n\n\n\n    <div class=\"container-condition\" *ngIf=\"currentCity\">\n        \n        <div class=\"city-details\">\n\n            <div>\n                <img [src]=\"\">\n                <div>\n                    <div>{{currentCity?.LocalizedName}}</div>\n                    <div>{{currentCondition?.Temperature?.Metric?.Value}}C</div>\n                </div>\n            </div>\n\n            <div class=\"add-favorite\" (click)=\"setFavorite()\">\n                <img src=\"\">\n                <div>Add to Favorites<div>\n            </div>\n        </div>\n\n        <div class=\"current-condition\">{{currentCondition?.WeatherText}}</div>\n\n        <div class=\"5day-forcasts d-flex\">\n            <app-day-forcast *ngFor=\"let day of dailyForecasts\" [day]=\"day.Date\" [temperature]=\"day.Temperature.Maximum.Value\"></app-day-forcast>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {MessageService} from 'primeng/api';\n\nimport { ApiService } from '../api.service'\nimport { City, Condition, DailyForecast, FavoriteCities } from './../model/Objects';\n\n@Component({\n  selector: 'weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss'],\n  providers: [MessageService]\n})\nexport class WeatherComponent implements OnInit {\n  \n  cities: City[];\n  searchForm: FormGroup;\n  get f() { return this.searchForm.controls; }\n\n  currentCity: City;\n  currentCondition: Condition;\n  dailyForecasts: DailyForecast[];\n\n  sub;\n\n  constructor(private fb: FormBuilder, private messageService: MessageService, \n    public apiService: ApiService, public FavoriteCities: FavoriteCities, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n\n    this.searchForm = this.fb.group({\n      city: ['', Validators.pattern('^[a-zA-Z ]*')]\n    });\n\n    // Defaults to 'Tel Aviv' if no query param provided.\n    this.sub = this.route\n      .queryParams\n      .subscribe(params => {\n        this.currentCity = new City(params['key'] || \"215854\", params['city'] || \"Tel Aviv\");\n    });\n\n\n    // this.selectCity(this.currentCity);\n    this.currentCondition = new Condition(\"Clear\", false, null, null, 11.6, 33);\n    this.dailyForecasts = [\n      new DailyForecast(new Date(\"2020-03-22T07:00:00+02:00\"), 18.4, 8.3),\n      new DailyForecast(new Date(\"2020-03-23T07:00:00+02:00\"), 23.4, 15.2),\n      new DailyForecast(new Date(\"2020-03-24T07:00:00+02:00\"), 22.4, 12.3),\n      new DailyForecast(new Date(\"2020-03-25T07:00:00+02:00\"), 20.4, 11.3),\n      new DailyForecast(new Date(\"2020-03-26T07:00:00+02:00\"), 24.4, 16.3),\n    ];\n  }\n\n  searchCity(event) {\n\n    if (this.searchForm.invalid) {\n      return;\n    }\n\n    this.apiService.getCities(event.query)\n    .subscribe(\n      (data: any) => {\n          this.cities = data;\n      },\n      error => {\n        this.messageService.add({severity:'error', summary:'Server Error', detail: error});\n      }\n    );\n  }\n\n  selectCity(event: City) {\n\n    this.currentCity = event;\n\n    this.apiService.getCurrentCondition(this.currentCity.Key)\n    .subscribe(\n      (data: any) => {\n          this.currentCondition = data[0];\n      },\n      error => {\n          this.messageService.add({severity:'error', summary:'Server Error', detail: error});\n      }\n    );\n\n    this.apiService.get5DaysForecasts(this.currentCity.Key)\n    .subscribe(\n      (data: any) => {\n          this.dailyForecasts = data[\"DailyForecasts\"];\n      },\n      error => {          \n        this.messageService.add({severity:'error', summary:'Server Error', detail: error});\n      }\n    );\n\n  }\n\n  setFavorite() {\n\n    this.currentCity.isFavorite = !this.currentCity.isFavorite;\n\n    if (this.currentCity.isFavorite) {\n      this.FavoriteCities.Cities.push( {City: this.currentCity, Condition: this.currentCondition});\n    }\n    else {\n      this.FavoriteCities.Cities = this.FavoriteCities.Cities.filter(city => city.City.Key != this.currentCity.Key);\n    }\n  }\n\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}